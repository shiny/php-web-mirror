server {
    listen 80 default_server;
    server_name _;
    location / {
        return 301 https://$host$request_uri;
    }
    # for acme.sh
    location /.well-known/ {
        root   /var/www/web-php;
    }
}

server {
    listen  443 ssl http2;

    ssl_certificate     sslcert/phpdoc-u301-com.crt;
    ssl_certificate_key sslcert/phpdoc-u301-com.key;
    ssl_stapling               on;
    ssl_stapling_verify        on;
    ssl_trusted_certificate    sslcert/ca.crt;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_ciphers         EECDH+CHACHA20:EECDH+CHACHA20-draft:EECDH+ECDSA+AES128:EECDH+aRSA+AES128:RSA+AES128:EECDH+ECDSA+AES256:EECDH+aRSA+AES256:RSA+AES256:EECDH+ECDSA+3DES:EECDH+aRSA+3DES:RSA+3DES:!MD5;
    keepalive_timeout   120;
    ssl_session_cache shared:SSL:50m;
    ssl_prefer_server_ciphers on;
    ssl_session_timeout  5m;

    # 这里可以用正则表达式捕获子组，得到变量名 $subdomain
    server_name phpdoc.u301.com ~^(?<subdomain>.+)\.phpdoc\.u301\.com$;
    root   /var/www/web-php;

    index  index.html index.htm index.php;
    try_files $uri $uri/ $uri.php;

    location ~ \.(git|inc|sql)$ {
        deny all;
    }

    # 当使用 pr-\d+ 子域名时，需要指向该 PR 生成的目录
    if ( $subdomain ~* ^pr-\d+$ ) {
        rewrite ^/manual/zh/(.*)$ /manual/zh-$subdomain/$1;
    }

    location ~ \.php$ {
        fastcgi_pass   php:9000;
        fastcgi_index  index.php;
        fastcgi_param  SCRIPT_FILENAME    $document_root$fastcgi_script_name;
        include        fastcgi_params;
        # php-web 依赖于 SERVER_NAME 生成绝对地址
        # 配置此变量可不用修改 PHP 代码即可得到正确的 URL
        fastcgi_param  SERVER_NAME $host;
    }

    # PHP 包下载，服务器上不存在
    location /distributions/ {
        rewrite ^(.+)$ https://www.php.net$1 redirect;
    }

    # This project is only for test
    location /robots.txt {
        return 200 'User-agent: *\nDisallow: /';
    }
}
